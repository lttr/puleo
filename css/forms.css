/*
* Forms inputs normalization
*
* A simplified version of custom forms by Adam Argyle: https://codepen.io/argyleink/pen/RwxJKQa/2256560bf93a131b58b5774e840d51f0
*/

/*
* Form elements:
*
* form
* textarea
* input type=text
* input type=password
* input type=url
* input type=email
* input type=tel
* input type=search
* input type=number
* input type=color
* input type=checkbox
* input type=radio
* input type=file
* input type=date
* input type=time
* input type=month
* input type=week
* input type=range
* input type=datetime-local
* input type=search
* select
* button
* input type=submit
* input type=reset
* input type=button
* fieldset
* legend
* label
* datalist
*/

/* Let form controls to look like other other elements. */
:where(input:not(:is([type="button"], [type="file"])), textarea, select) {
  font: inherit;
  font-size: var(--font-size--1);
  color: inherit;
  letter-spacing: inherit;
}

:where(
    input:not([type="range"], [type="checkbox"], [type="radio"], [type="file"])
  ) {
  height: var(--button-height-default);
}

form {
  display: grid;
  gap: var(--space-4);
}

label {
  font-size: var(--font-size--1);
  font-weight: var(--font-weight-label);
}

/**
* A form group wrapping a label, an input and additional hints or messages.
* Vertical layout for all viewports.
*/
:where(.p-form-group) {
  display: grid;
  grid-auto-columns: 1fr;
  gap: var(--space-2) var(--space-3);
  align-items: center;
}

:where(fieldset) {
  display: grid;
  gap: var(--space-3);
  max-inline-size: max-content;
  border: none;
  padding-inline: 0;

  legend {
    color: var(--text-color-2);
    font-weight: var(--font-weight-body-bold);
    font-size: var(--font-size--1);
    padding-inline: 0;
    margin-block-end: var(--space-3);
  }

  footer {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: var(--space-3);
    margin-block-start: var(--space-4);

    menu:only-child {
      margin-inline-start: auto;
    }
  }

  ul {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: grid;
    gap: var(--space-2);

    li {
      padding: 0;

      label {
        display: inline-flex;
        align-items: center;
        gap: var(--space-3);
        max-inline-size: var(--size-content-2);
      }

      input {
        margin-inline-start: 0;
        flex-shrink: 0;
      }
    }
  }
}

:where(
    [type="text"],
    [type="number"],
    [type="password"],
    [type="url"],
    [type="email"],
    [type="tel"],
    [type="search"],
    [type="date"],
    [type="month"],
    [type="week"],
    [type="datetime-local"],
    select,
    textarea
  ) {
  padding-inline: var(--space-2);
  padding-block: var(--space-1);
}

input:is(
    [type="text"],
    [type="password"],
    [type="url"],
    [type="email"],
    [type="tel"],
    [type="search"]
  ) {
  flex-shrink: 1;
  min-inline-size: 5ch;
  max-inline-size: 100%;
}

:where(
    textarea,
    select,
    input:not([type="button"], [type="file"], [type="submit"], [type="reset"])
  ) {
  background-color: var(--surface-2);
  border-radius: var(--input-radius);
}

:where(textarea) {
  resize: block;
}

:where(input[type="checkbox"], input[type="radio"]) {
  block-size: var(--space-4);
  inline-size: var(--space-4);
}

@media (--OSdark) {
  :where(
      textarea,
      select,
      input:not([type="button"], [type="submit"], [type="reset"])
    ) {
    background-color: var(--surface-0);
  }

  :where(dialog) {
    background-color: var(--surface-2);
  }

  ::placeholder {
    color: var(--gray-6);
  }
}

/* custom forms */

:where(
    input:not(
        [type="button"],
        [type="checkbox"],
        [type="color"],
        [type="file"],
        [type="number"],
        [type="radio"],
        [type="range"],

      )
  ) {
  line-height: var(--font-lineheight-4);
  padding-block: var(--space-1);
  transition:
    background-color 0.5s var(--ease-3),
    outline-offset 145ms var(--ease-2);

  :placeholder-shown {
    text-overflow: ellipsis;
  }

  @media (prefers-reduced-motion: no-preference) {
    &:not(:placeholder-shown):invalid:not(:focus) {
      animation: var(--animation-shake-x);
      animation-duration: 0.4s;
    }
  }
}

:where(
    input:not(
        input[type="button"],
        input[type="range"],
        input[type="color"],
        input[type="checkbox"],
        input[type="radio"]
      ),
    textarea,
    select
  ) {
  box-shadow:
    var(--shadow-2),
    0 0 1px 1px var(--surface-3);

  @media (prefers-color-scheme: dark) {
    box-shadow:
      var(--inner-shadow-2),
      0 1px 0px 0px var(--dark-surface) inset,
      0 -0.5px 0px 0px var(--surface-2) inset;
  }
}

:where(input, textarea) {
  --dark-surface: var(--gray-11);
}

[readonly]:focus {
  outline: none;
}

input:not(
    [disabled],
    [readonly],
    [type="file"],
    [type="button"],
    [type="submit"],
    [type="reset"],
    [type="checkbox"],
    [type="radio"]
  ),
textarea,
select {
  color: var(--text-color-body);

  @media (prefers-color-scheme: light) {
    background-color: white;
  }

  &:is(:hover, :focus-within) {
    @media (prefers-color-scheme: dark) {
      background-color: var(--dark-surface);
    }
  }

  &:not(:placeholder-shown, :not([placeholder])):invalid {
    background-position: calc(100% - 1.5ch) center;
  }

  &:not(:focus-within):not(:placeholder-shown):invalid {
    text-decoration: underline wavy var(--red-6);

    @media (prefers-color-scheme: dark) {
      text-decoration: underline wavy var(--red-4);
    }
  }
}

input[readonly],
input[disabled] {
  cursor: not-allowed;
}

input[disabled] {
  opacity: 0.5;
  box-shadow: none;
  cursor: auto;
}

input[type="search"] {
  background-position: 1.5ch center;
  border-radius: var(--radius-round);

  &::-webkit-search-cancel-button {
    margin-right: -5px;
    padding: 0.1ch;
  }

  &[list]:placeholder-shown {
    background-position:
      1.5ch center,
      calc(100% - 1.25ch) center;
    background-size: auto, 2.25ch;
  }
}

:where(select) {
  font-size: var(--font-size--1);
  height: var(--button-height-default);
}

:where(::placeholder) {
  color: var(--gray-6);
  font-style: italic;
}

@media (pointer: coarse) {
  :where(input[type="checkbox"], input[type="radio"]) {
    inline-size: var(--space-4);
    block-size: var(--space-4);
  }
}
